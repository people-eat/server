type Session {
    sessionId: String!
    userId: String
    title: String
    platform: Platform!
    expired: Boolean!
    lastExtendedAt: DateTime!
    createdAt: DateTime!

    cookieSettings: SessionCookieSettings
}

type SessionCookieSettings {
    sessionCookie: Boolean
    googleAnalytics: Boolean
    clarity: Boolean
}

input SessionCookieSettingsInput {
    sessionCookie: Boolean
    googleAnalytics: Boolean
    clarity: Boolean
}

type UserSessionQuery {
    userId: String!
    findMany: [Session!]
}

type UserQuery {
    sessions(userId: String!): UserSessionQuery!
}

input CreateOneSessionByEmailAddressRequest {
    emailAddress: EmailAddress!
    password: String!
    platform: Platform!
    title: String!
    pushToken: String
}

input CreateOneSessionByPhoneNumberRequest {
    phoneNumber: String!
    password: String!
    platform: Platform!
    title: String!
    pushToken: String
}

input CreateOneSessionByIdentityProviderRequest {
    identityProvider: IdentityProvider!
    idToken: String!
    title: String!
    platform: Platform!
}

input ExpireOneSessionRequest {
    sessionId: String!
    userId: String!
}

type UserSessionMutation {
    userId: String!
    expireOne(request: ExpireOneSessionRequest!): Boolean!
    expireMany(request: [String!]!): Boolean!
    expireCurrent: Boolean!
}

type UserMutation {
    sessions(userId: String!): UserSessionMutation!
}

type SessionMutation {
    assignOneByEmailAddress(request: CreateOneSessionByEmailAddressRequest!): Boolean!
    assignOneByPhoneNumber(request: CreateOneSessionByPhoneNumberRequest!): Boolean!
    assignOneByIdentityProvider(request: CreateOneSessionByIdentityProviderRequest!): Boolean!
    assignOne(userId: String!): Boolean!

    updateCookieSettings(request: SessionCookieSettingsInput!): Boolean!
}

type Mutation {
    sessions: SessionMutation!
}

type SessionQuery {
    current: Session
}

type Query {
    sessions: SessionQuery!
}
